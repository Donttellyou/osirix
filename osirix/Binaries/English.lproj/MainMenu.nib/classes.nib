{
    IBClasses = (
        {
            ACTIONS = {
                about = id; 
                cancelModal = id; 
                checkForUpdates = id; 
                closeAllViewers = id; 
                help = id; 
                okModal = id; 
                openOsirixBugReporter = id; 
                openOsirixDiscussion = id; 
                openOsirixFeatureRequest = id; 
                openOsirixWebPage = id; 
                openOsirixWikiWebPage = id; 
                saveLayout = id; 
                sendEmail = id; 
                showPreferencePanel = id; 
                startSTORESCP = id; 
                terminate = id; 
                tileWindows = id; 
                updateViews = id; 
            }; 
            CLASS = AppController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                browserController = BrowserController; 
                dbMenu = NSMenu; 
                dbWindow = NSWindow; 
                displayDICOMOverlaysMenuItem = NSMenuItem; 
                filtersMenu = NSMenu; 
                othersMenu = NSMenu; 
                roisMenu = NSMenu; 
                syncSeriesMenuItem = NSMenuItem; 
            }; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {netServiceDidStop = id; netServiceWillPublish = id; toggleSharing = id; }; 
            CLASS = BonjourPublisher; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {
                ReBuildDatabase = id; 
                ReBuildDatabaseSheet = id; 
                addSmartAlbum = id; 
                addURLToDatabase = id; 
                addURLToDatabaseEnd = id; 
                albumButtons = id; 
                anonymizeDICOM = id; 
                autoCleanDatabaseDate = id; 
                autoCleanDatabaseFreeSpace = id; 
                bonjourRunLoop = id; 
                bonjourServiceClicked = id; 
                buildAllThumbnails = id; 
                burnDICOM = id; 
                checkIncoming = id; 
                checkIncomingThread = id; 
                checkMemory = id; 
                compressSelectedFiles = id; 
                createDatabase = id; 
                createDatabaseFolder = id; 
                customIntervalNow = id; 
                customize = id; 
                databaseDoublePressed = id; 
                decompressSelectedFiles = id; 
                delItem = id; 
                deleteReport = id; 
                emptyDeleteQueue = id; 
                endCustomInterval = id; 
                endReBuildDatabase = id; 
                executeFilterDB = id; 
                export2PACS = id; 
                exportDICOMFile = id; 
                generateReport = id; 
                importRawData = id; 
                matrixDisplayIcons = id; 
                matrixDoublePressed = id; 
                matrixPressed = id; 
                newFilesGUIUpdate = id; 
                newViewerDICOM = id; 
                openDatabase = id; 
                pdfPreview = id; 
                previewPerformAnimation = id; 
                previewSliderAction = id; 
                queryDICOM = id; 
                querySelectedStudy = id; 
                rebuildThumbnails = id; 
                refreshDatabase = id; 
                search = id; 
                selectAll3DSeries = id; 
                selectAll4DSeries = id; 
                selectFilesAndFoldersToAdd = id; 
                sendiDisk = id; 
                setImageTiling = id; 
                setSearchType = id; 
                setTimeIntervalType = id; 
                showDatabase = id; 
                showLogWindow = id; 
                showhide = id; 
                smartAlbumHelpButton = id; 
                srReports = id; 
                storeSCPComplete = id; 
                toggleBonjourSharing = id; 
                viewerDICOM = id; 
                viewerDICOMKeyImages = id; 
                viewerDICOMMergeSelection = id; 
            }; 
            CLASS = BrowserController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                addDICOMDIRButton = NSButton; 
                albumDrawer = NSDrawer; 
                albumTable = NSTableView; 
                animationCheck = NSButton; 
                animationSlider = NSSlider; 
                bonjourPassword = NSTextField; 
                bonjourPasswordCheck = NSButton; 
                bonjourPasswordWindow = NSWindow; 
                bonjourServiceName = NSTextField; 
                bonjourServicesList = NSTableView; 
                bonjourSharingCheck = NSButton; 
                bonjourSourcesBox = NSBox; 
                compressionMatrix = NSMatrix; 
                customEnd = NSDatePicker; 
                customEnd2 = NSDatePicker; 
                customStart = NSDatePicker; 
                customStart2 = NSDatePicker; 
                customTimeIntervalWindow = NSWindow; 
                databaseDescription = NSTextField; 
                databaseOutline = MyOutlineView; 
                editSmartAlbum = NSWindow; 
                editSmartAlbumName = NSTextField; 
                editSmartAlbumQuery = NSTextField; 
                enoughMem = NSBox; 
                estimatedTime = NSTextField; 
                exportAccessoryView = NSView; 
                exportHTMLButton = NSButton; 
                exportQuicktimeView = NSView; 
                folderTree = NSMatrix; 
                imageTileMenu = NSMenu; 
                imageView = PreviewView; 
                incomingProgress = NSProgressIndicator; 
                mainWindow = NSWindow; 
                memoryMessage = NSTextField; 
                newAlbum = NSWindow; 
                newAlbumName = NSTextField; 
                noOfFilesToRebuild = NSTextField; 
                notEnoughMem = NSBox; 
                oMatrix = NSMatrix; 
                password = NSTextField; 
                rdAccessory = NSView; 
                rdOffsetForm = NSForm; 
                rdPatientForm = NSForm; 
                rdPixelForm = NSForm; 
                rdPixelTypeMatrix = NSMatrix; 
                rdVoxelForm = NSForm; 
                rebuildType = NSMatrix; 
                rebuildWindow = NSWindow; 
                reportTemplatesImageView = NSImageView; 
                reportTemplatesListPopUpButton = NSPopUpButton; 
                reportTemplatesView = NSView; 
                searchField = NSSearchField; 
                searchView = NSView; 
                segmentedAlbumButton = NSSegmentedControl; 
                sourcesSplitView = NSSplitView; 
                splitViewHorz = NSSplitView; 
                splitViewVert = NSSplitView; 
                subOpenMatrix3D = NSMatrix; 
                subOpenMatrix4D = NSMatrix; 
                subOpenWindow = NSWindow; 
                subSeriesOKButton = NSButton; 
                subSeriesWindow = NSWindow; 
                supOpenButtons = NSMatrix; 
                thumbnailsScrollView = NSScrollView; 
                timeIntervalPopup = NSPopUpButton; 
                timeIntervalView = NSView; 
                urlString = NSTextField; 
                urlWindow = NSWindow; 
                warning = NSTextField; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {
            ACTIONS = {
                alwaysSyncMenu = id; 
                changeFont = id; 
                flipHorizontal = id; 
                flipVertical = id; 
                resetImagePresentationState = id; 
                resetSeriesPresentationState = id; 
                roiLoadFromXMLFiles = id; 
                sliderAction = id; 
                sliderAction2DMPR = id; 
                sliderRGBFactor = id; 
            }; 
            CLASS = DCMView; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSOpenGLView; 
        }, 
        {CLASS = DarkWindow; LANGUAGE = ObjC; SUPERCLASS = NSWindow; }, 
        {CLASS = DicomFile; LANGUAGE = ObjC; SUPERCLASS = NSObject; }, 
        {
            ACTIONS = {
                ConvertToBWMenu = id; 
                ConvertToRGBMenu = id; 
                SyncSeries = id; 
                alwaysSyncMenu = id; 
                annotMenu = id; 
                applyConvolutionOnSource = id; 
                axView = id; 
                barMenu = id; 
                calciumScoring = id; 
                calibrate = id; 
                centerline = id; 
                clearOffset = id; 
                closeSelectedBrushROI = id; 
                coView = id; 
                copySettingsToOthers = id; 
                createKeyObjectNote = id; 
                createLayerROIFromSelectedROI = id; 
                customizeViewerToolBar = id; 
                dilateSelectedBrushROI = id; 
                displayDICOMOverlays = id; 
                export2PACS = id; 
                export2iPhoto = id; 
                exportAsDICOMSR = id; 
                exportDICOMFile = id; 
                exportDICOMPACS = id; 
                exportJPEG = id; 
                exportQuicktime = id; 
                exportQuicktime3D = id; 
                exportQuicktime3DVR = id; 
                exportRAW = id; 
                exportTIFF = id; 
                flipHorizontal = id; 
                flipVertical = id; 
                flyThruButton = id; 
                flyThruButtonMenu = id; 
                fullScreenMenu = id; 
                groupSelectedROIs = id; 
                iChatBroadcast = id; 
                load3DSettings = id; 
                loadSerie = id; 
                morphoSelectedBrushROI = id; 
                myAction = id; 
                nextPlane = id; 
                openSelectedBrushROI = id; 
                printDICOM = id; 
                reSyncOrigin = id; 
                resetImage = id; 
                resetImagePresentationState = id; 
                resetSeriesPresentationState = id; 
                resizeWindow = id; 
                revertSeries = id; 
                roiDefaults = id; 
                roiDeleteAll = id; 
                roiGetInfo = id; 
                roiGetManager = id; 
                roiHistogram = id; 
                roiLoadFromFiles = id; 
                roiLoadFromXMLFiles = id; 
                roiPropagate = id; 
                roiPropagateSetup = id; 
                roiPropagateSlab = id; 
                roiRename = id; 
                roiSaveSelected = id; 
                roiSetPixels = id; 
                roiSetPixelsSetup = id; 
                roiVolume = id; 
                rotate0 = id; 
                rotate180 = id; 
                rotate90 = id; 
                saView = id; 
                saViewOpposite = id; 
                save3DSettings = id; 
                scissorStateButtons = id; 
                segmentationTest = id; 
                sendMail = id; 
                setBackgroundColor = id; 
                setDefaultToolMenu = id; 
                setKeyImage = id; 
                setMode = id; 
                setOffset = id; 
                setROITool = id; 
                startMSRG = id; 
                subCtrlNewMask = id; 
                subCtrlOffset = id; 
                subCtrlOnOff = id; 
                subCtrlSliders = id; 
                subSharpen = id; 
                subSumSlider = id; 
                switchCopySettingsInSeries = id; 
                syncronize = id; 
                ungroupSelectedROIs = id; 
                useVOILUT = id; 
                viewXML = id; 
            }; 
            CLASS = FirstResponder; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {nothing = id; save = id; }; 
            CLASS = LogArrayController; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSArrayController; 
        }, 
        {CLASS = LogTableView; LANGUAGE = ObjC; SUPERCLASS = NSTableView; }, 
        {CLASS = MatrixContextual; LANGUAGE = ObjC; SUPERCLASS = NSMatrix; }, 
        {CLASS = MyOutlineView; LANGUAGE = ObjC; SUPERCLASS = NSOutlineView; }, 
        {CLASS = NSDatePicker; LANGUAGE = ObjC; SUPERCLASS = NSControl; }, 
        {CLASS = NSSegmentedControl; LANGUAGE = ObjC; SUPERCLASS = NSControl; }, 
        {
            CLASS = PluginManager; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                dbMenu = NSMenu; 
                filtersMenu = NSMenu; 
                othersMenu = NSMenu; 
                roisMenu = NSMenu; 
            }; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {modifiy = id; }; 
            CLASS = PluginManagerController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                dbMenu = NSMenu; 
                filtersMenu = NSMenu; 
                othersMenu = NSMenu; 
                pluginTable = NSTableView; 
                roisMenu = NSMenu; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {
            ACTIONS = {newServer = id; switchListener = id; }; 
            CLASS = PreferenceController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                CheckUpdatesOnOff = NSButton; 
                ListenerOnOff = NSButton; 
                TransferOptions = NSMatrix; 
                form = NSForm; 
                tableView = NSTableView; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {CLASS = PreviewView; LANGUAGE = ObjC; SUPERCLASS = DCMView; }, 
        {
            CLASS = QuicktimeExport; 
            LANGUAGE = ObjC; 
            OUTLETS = {object = id; test = NSView; }; 
            SUPERCLASS = NSObject; 
        }, 
        {
            ACTIONS = {
                AddOpacity = id; 
                ConvertToBWMenu = id; 
                ConvertToRGBMenu = id; 
                CurvedMPR = id; 
                MPR2DViewer = id; 
                MPRViewer = id; 
                MoviePlayStop = id; 
                PlayStop = id; 
                SRViewer = id; 
                VRVPROViewer = id; 
                VRViewer = id; 
                blendingMode = id; 
                blendingSlider = id; 
                brushTool = id; 
                changeMatrixSize = id; 
                clearOffset = id; 
                clutAction = id; 
                computeSum = id; 
                convMatrixAction = id; 
                copySettingsToOthers = id; 
                endBlendingType = id; 
                endCLUT = id; 
                endConv = id; 
                endCurvedMPR = id; 
                endDisplaySUV = id; 
                endExportDICOMFileSettings = id; 
                endExportImage = id; 
                endNameWLWW = id; 
                endOpacity = id; 
                endQuicktime = id; 
                endRoiRename = id; 
                endSetComments = id; 
                endSetWLWW = id; 
                endThicknessInterval = id; 
                endoscopyViewer = id; 
                export2PACS = id; 
                export2iPhoto = id; 
                exportJPEG = id; 
                exportQuicktime = id; 
                keyImageCheckBox = id; 
                keyImageDisplayButton = id; 
                loadPatient = id; 
                loadSerie = id; 
                moviePosSliderAction = id; 
                movieRateSliderAction = id; 
                orthogonalMPRViewer = id; 
                popFusionAction = id; 
                resetImage = id; 
                roiDeleteAll = id; 
                roiPropagate = id; 
                roiPropagateSetup = id; 
                roiRename = id; 
                roiSetPixels = id; 
                roiSetPixelsSetup = id; 
                setButtonTool = id; 
                setComments = id; 
                setCurrentPosition = id; 
                setCurrentdcmExport = id; 
                setCurvedMPRslider = id; 
                setDefaultTool = id; 
                setROITool = id; 
                setStatus = id; 
                sliderFusionAction = id; 
                speedSliderAction = id; 
                startMSRG = id; 
                startMSRGWithAutomaticBounding = id; 
                subtractCurrent = id; 
                subtractStepper = id; 
                subtractSwitch = id; 
                updateImage = id; 
                updateSetWLWW = id; 
            }; 
            CLASS = ViewerController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                AllROIsRadio = NSMatrix; 
                BlendingView = NSView; 
                CommentsEditField = NSTextField; 
                CommentsField = NSButton; 
                CommentsWindow = NSWindow; 
                ConvView = NSView; 
                FusionView = NSView; 
                InOutROI = NSMatrix; 
                OpacityName = NSTextField; 
                OpacityPopup = NSPopUpButton; 
                OpacityView = OpacityTransferView; 
                RGBFactorsView = NSView; 
                ReconstructionRoi = NSPopUpButton; 
                ReconstructionView = NSView; 
                StatusPopup = NSPopUpButton; 
                StatusView = NSView; 
                ThickIntervalWindow = NSWindow; 
                WLWWView = NSView; 
                XOffset = NSTextField; 
                YOffset = NSTextField; 
                addCLUTWindow = NSWindow; 
                addConvWindow = NSWindow; 
                addOpacityWindow = NSWindow; 
                addWLWWWindow = NSWindow; 
                blendingPercentage = NSTextField; 
                blendingPlugins = NSPopUpButton; 
                blendingSlider = NSSlider; 
                blendingTypeBlue = NSButton; 
                blendingTypeGreen = NSButton; 
                blendingTypeMultiply = NSButton; 
                blendingTypeRGB = NSButton; 
                blendingTypeRed = NSButton; 
                blendingTypeSubtract = NSButton; 
                blendingTypeWindow = NSWindow; 
                buttonToolMatrix = NSMatrix; 
                checkMaxValue = NSButton; 
                checkMinValue = NSButton; 
                clutName = NSTextField; 
                clutPopup = NSPopUpButton; 
                clutView = ColorTransferView; 
                convMatrix = NSMatrix; 
                convPopup = NSPopUpButton; 
                curvedMPRWindow = NSWindow; 
                curvedMPRinterval = NSSlider; 
                curvedMPRintervalText = NSTextField; 
                curvedMPRper = NSButton; 
                curvedMPRsize = NSSlider; 
                curvedMPRsizeText = NSTextField; 
                curvedMPRslid = NSSlider; 
                curvedMPRtext = NSTextField; 
                customInterval = NSTextField; 
                customOrigin = NSMatrix; 
                customVectors = NSMatrix; 
                customXSpacing = NSTextField; 
                customYSpacing = NSTextField; 
                dcmBox = NSBox; 
                dcmExportWindow = NSWindow; 
                dcmFormat = NSMatrix; 
                dcmFrom = NSSlider; 
                dcmInterval = NSSlider; 
                dcmSelection = NSMatrix; 
                dcmTo = NSSlider; 
                displaySUVWindow = NSWindow; 
                fromset = NSTextField; 
                iPhotoView = NSView; 
                imageExportWindow = NSWindow; 
                imageFormat = NSMatrix; 
                imageSelection = NSMatrix; 
                keyImageCheck = NSButton; 
                keyImageDisplay = NSButton; 
                keyImages = NSView; 
                loopButton = NSButton; 
                matrixName = NSTextField; 
                matrixNorm = NSTextField; 
                maxValueText = NSTextField; 
                minValueText = NSTextField; 
                moviePlayStop = NSButton; 
                moviePosSlider = NSSlider; 
                movieRateSlider = NSSlider; 
                movieTextSlide = NSTextField; 
                movieView = NSView; 
                newName = NSTextField; 
                newValueText = NSTextField; 
                patientView = NSView; 
                popFusion = NSPopUpButton; 
                popupRoi = NSPopUpButton; 
                previewMatrix = NSMatrix; 
                quicktimeBox = NSBox; 
                quicktimeFrom = NSSlider; 
                quicktimeInterval = NSSlider; 
                quicktimeMode = NSMatrix; 
                quicktimeTo = NSSlider; 
                quicktimeWindow = NSWindow; 
                roiPropaCopy = NSMatrix; 
                roiPropaDest = NSTextField; 
                roiPropaDim = NSMatrix; 
                roiPropaMode = NSMatrix; 
                roiPropaWindow = NSWindow; 
                roiRenameMatrix = NSMatrix; 
                roiRenameName = NSTextField; 
                roiRenameWindow = NSWindow; 
                roiSetPixWindow = NSWindow; 
                serieView = NSView; 
                setROI4DSeries = NSButton; 
                setWLWWWindow = NSWindow; 
                sizeMatrix = NSMatrix; 
                slider = NSSlider; 
                sliderFusion = NSSlider; 
                speedSlider = NSSlider; 
                speedText = NSTextField; 
                speedView = NSView; 
                splitView = NSSplitView; 
                stacksFusion = NSTextField; 
                studyView = StudyView; 
                subtractIm = NSTextField; 
                subtractOnOff = NSButton; 
                subtractView = NSView; 
                suvConversion = NSMatrix; 
                suvForm = NSForm; 
                toolsMatrix = NSMatrix; 
                toolsView = NSView; 
                toset = NSTextField; 
                wl = NSTextField; 
                wlset = NSTextField; 
                wlwwPopup = NSPopUpButton; 
                ww = NSTextField; 
                wwset = NSTextField; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {
            CLASS = pingWindowController; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSWindowController; 
        }, 
        {
            ACTIONS = {
                customize = id; 
                goToWebsite = id; 
                matrixPressed = id; 
                reveal = id; 
                scroller = id; 
                selectFolder = id; 
                selectInput = id; 
                showhide = id; 
                startStop = id; 
                switchRadio = id; 
            }; 
            CLASS = scaleController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                dicomOutline = NSOutlineView; 
                dicomTable = NSTableView; 
                factorSize = id; 
                factorSlider = id; 
                fixedSize = id; 
                inputDICOM = id; 
                inputDICOMFolder = id; 
                interpolation = id; 
                oMatrix = NSMatrix; 
                optionsRadio = id; 
                outputDICOM = id; 
                patientID = id; 
                patientName = id; 
                sizeMenu = id; 
                startBut = id; 
                theApp = id; 
                theOutputTextView = id; 
                window = id; 
                working = NSProgressIndicator; 
            }; 
            SUPERCLASS = NSObject; 
        }
    ); 
    IBVersion = 1; 
}