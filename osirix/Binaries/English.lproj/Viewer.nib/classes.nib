{
    IBClasses = (
        {
            ACTIONS = {renderButton = id; selectPicker = id; }; 
            CLASS = ColorTransferView; 
            LANGUAGE = ObjC; 
            OUTLETS = {pick = NSColorWell; position = NSTextField; }; 
            SUPERCLASS = NSView; 
        }, 
        {CLASS = CurvedMPR; LANGUAGE = ObjC; SUPERCLASS = NSObject; }, 
        {
            ACTIONS = {
                alwaysSyncMenu = id; 
                changeFont = id; 
                flipHorizontal = id; 
                flipVertical = id; 
                sliderAction = id; 
                sliderAction2DMPR = id; 
                sliderRGBFactor = id; 
            }; 
            CLASS = DCMView; 
            LANGUAGE = ObjC; 
            OUTLETS = {syncOffsetText = NSTextField; syncOffsetWindow = NSWindow; }; 
            SUPERCLASS = NSOpenGLView; 
        }, 
        {
            ACTIONS = {
                "" = id; 
                calibrate = id; 
                setBlendingFactor = id; 
                sliderAction = id; 
                sliderRGBFactor = id; 
                subCtrlNewMask = id; 
                subCtrlOffset = id; 
                subCtrlOnOff = id; 
            }; 
            CLASS = FirstResponder; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSObject; 
        }, 
        {CLASS = FusionDrawer; LANGUAGE = ObjC; SUPERCLASS = NSView; }, 
        {
            CLASS = MyPopUpButton; 
            LANGUAGE = ObjC; 
            OUTLETS = {matrix = NSMatrix; }; 
            SUPERCLASS = NSButtonCell; 
        }, 
        {CLASS = NSDatePicker; LANGUAGE = ObjC; SUPERCLASS = NSControl; }, 
        {CLASS = NSLevelIndicator; LANGUAGE = ObjC; SUPERCLASS = NSControl; }, 
        {
            ACTIONS = {renderButton = id; }; 
            CLASS = OpacityTransferView; 
            LANGUAGE = ObjC; 
            OUTLETS = {position = NSTextField; }; 
            SUPERCLASS = NSView; 
        }, 
        {CLASS = StudyView; LANGUAGE = ObjC; SUPERCLASS = NSView; }, 
        {
            ACTIONS = {
                ApplyCLUT = id; 
                ApplyOpacity = id; 
                LODsliderAction = id; 
                MoviePlayStop = id; 
                blendingSlider = id; 
                endCLUT = id; 
                endNameWLWW = id; 
                endOpacity = id; 
                moviePosSliderAction = id; 
                movieRateSliderAction = id; 
                setDefaultTool = id; 
            }; 
            CLASS = VRController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                BlendingView = NSView; 
                LODSlider = NSSlider; 
                LODView = NSView; 
                OpacityName = NSTextField; 
                OpacityPopup = NSPopUpButton; 
                OpacityView = OpacityTransferView; 
                WLWWView = NSView; 
                addCLUTWindow = NSWindow; 
                addOpacityWindow = NSWindow; 
                addWLWWWindow = NSWindow; 
                blendingPercentage = NSTextField; 
                blendingSlider = NSSlider; 
                blendingTypeWindow = NSWindow; 
                clutName = NSTextField; 
                clutPopup = NSPopUpButton; 
                clutView = ColorTransferView; 
                moviePlayStop = NSButton; 
                moviePosSlider = NSSlider; 
                movieRateSlider = NSSlider; 
                movieTextSlide = NSTextField; 
                movieView = NSView; 
                newName = NSTextField; 
                toolsMatrix = NSMatrix; 
                toolsView = NSView; 
                view = VRView; 
                wl = NSTextField; 
                wlwwPopup = NSPopUpButton; 
                ww = NSTextField; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {
            ACTIONS = {
                AddOpacity = id; 
                ConvertToBWMenu = id; 
                ConvertToRGBMenu = id; 
                CurvedMPR = id; 
                MPR2DViewer = id; 
                MPRViewer = id; 
                MoviePlayStop = id; 
                PagePadCreate = id; 
                Panel3D = id; 
                PlayStop = id; 
                SRViewer = id; 
                SyncSeries = id; 
                VRVPROViewer = id; 
                VRViewer = id; 
                applyConvolutionOnSource = id; 
                blendingMode = id; 
                blendingSlider = id; 
                brushTool = id; 
                changeMatrixSize = id; 
                closeBrushROIFilterOptionsSheet = id; 
                closeSelectedBrushROI = id; 
                closeSelectedBrushROIWithRadius = id; 
                clutAction = id; 
                computeSum = id; 
                convMatrixAction = id; 
                createKeyObjectNote = id; 
                dilateSelectedBrushROI = id; 
                dilateSelectedBrushROIWithRadius = id; 
                endBlendingType = id; 
                endCLUT = id; 
                endConv = id; 
                endCurvedMPR = id; 
                endDisplaySUV = id; 
                endExportDICOMFileSettings = id; 
                endExportImage = id; 
                endNameWLWW = id; 
                endOpacity = id; 
                endQuicktime = id; 
                endRoiRename = id; 
                endSetComments = id; 
                endSetWLWW = id; 
                endThicknessInterval = id; 
                endoscopyViewer = id; 
                erodeSelectedBrushROI = id; 
                erodeSelectedBrushROIWithRadius = id; 
                export2PACS = id; 
                export2iPhoto = id; 
                exportDICOMSlider = id; 
                exportJPEG = id; 
                exportQuicktime = id; 
                exportQuicktimeSlider = id; 
                flipDataSeries = id; 
                fullScreenMenu = id; 
                keyImageCheckBox = id; 
                keyImageDisplayButton = id; 
                keyObjectNotes = id; 
                loadPatient = id; 
                loadSerie = id; 
                moviePosSliderAction = id; 
                movieRateSliderAction = id; 
                orthogonalMPRViewer = id; 
                popFusionAction = id; 
                reSyncOrigin = id; 
                resampleDataBy2 = id; 
                resetImage = id; 
                revertSeries = id; 
                roiDeleteAll = id; 
                roiPropagate = id; 
                roiPropagateSetup = id; 
                roiRename = id; 
                roiSetPixels = id; 
                roiSetPixelsSetup = id; 
                setButtonTool = id; 
                setComments = id; 
                setCurrentPosition = id; 
                setCurrentdcmExport = id; 
                setCurvedMPRslider = id; 
                setDefaultTool = id; 
                setROITool = id; 
                setStatus = id; 
                setStructuringElementRadius = id; 
                shutterOnOff = id; 
                sliderFusionAction = id; 
                speedSliderAction = id; 
                startMSRG = id; 
                startMSRGWithAutomaticBounding = id; 
                subCtrlNewMask = id; 
                subCtrlOffset = id; 
                subCtrlOnOff = id; 
                subCtrlSliders = id; 
                subSharpen = id; 
                subSumSlider = id; 
                updateImage = id; 
                updateSUVValues = id; 
                updateSetWLWW = id; 
            }; 
            CLASS = ViewerController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                AllROIsRadio = NSMatrix; 
                BlendingView = NSView; 
                CommentsEditField = NSTextField; 
                CommentsField = NSButton; 
                CommentsWindow = NSWindow; 
                ConvView = NSView; 
                FusionView = NSView; 
                InOutROI = NSMatrix; 
                OpacityName = NSTextField; 
                OpacityPopup = NSPopUpButton; 
                OpacityView = OpacityTransferView; 
                PagePad = NSView; 
                RGBFactorsView = NSView; 
                ReconstructionRoi = NSPopUpButton; 
                ReconstructionView = NSView; 
                StatusPopup = NSPopUpButton; 
                StatusView = NSView; 
                ThickIntervalWindow = NSWindow; 
                WLWWView = NSView; 
                addCLUTWindow = NSWindow; 
                addConvWindow = NSWindow; 
                addOpacityWindow = NSWindow; 
                addWLWWWindow = NSWindow; 
                blendingPercentage = NSTextField; 
                blendingPlugins = NSPopUpButton; 
                blendingSlider = NSSlider; 
                blendingTypeBlue = NSButton; 
                blendingTypeGreen = NSButton; 
                blendingTypeMultiply = NSButton; 
                blendingTypeRGB = NSButton; 
                blendingTypeRed = NSButton; 
                blendingTypeSubtract = NSButton; 
                blendingTypeWindow = NSWindow; 
                brushROIFilterOptionsAllWithSameName = NSButton; 
                brushROIFilterOptionsOKButton = NSButton; 
                brushROIFilterOptionsWindow = NSWindow; 
                buttonToolMatrix = NSMatrix; 
                checkMaxValue = NSButton; 
                checkMinValue = NSButton; 
                clutName = NSTextField; 
                clutPopup = NSPopUpButton; 
                clutView = ColorTransferView; 
                convMatrix = NSMatrix; 
                convPopup = NSPopUpButton; 
                curvedMPRWindow = NSWindow; 
                curvedMPRinterval = NSSlider; 
                curvedMPRintervalText = NSTextField; 
                curvedMPRper = NSButton; 
                curvedMPRsize = NSSlider; 
                curvedMPRsizeText = NSTextField; 
                curvedMPRslid = NSSlider; 
                curvedMPRtext = NSTextField; 
                customInterval = NSTextField; 
                customOrigin = NSMatrix; 
                customVectors = NSMatrix; 
                customXSpacing = NSTextField; 
                customYSpacing = NSTextField; 
                dcmBox = NSBox; 
                dcmExportWindow = NSWindow; 
                dcmFormat = NSMatrix; 
                dcmFrom = NSSlider; 
                dcmFromText = NSTextField; 
                dcmInterval = NSSlider; 
                dcmIntervalText = NSTextField; 
                dcmSelection = NSMatrix; 
                dcmSeriesName = NSTextField; 
                dcmTo = NSSlider; 
                dcmToText = NSTextField; 
                displaySUVWindow = NSWindow; 
                fromset = NSTextField; 
                iPhotoView = NSView; 
                imageExportWindow = NSWindow; 
                imageFormat = NSMatrix; 
                imageSelection = NSMatrix; 
                keyImageCheck = NSButton; 
                keyImageDisplay = NSButton; 
                keyImagePopUpButton = NSPopUpButton; 
                keyImages = NSView; 
                loopButton = NSButton; 
                matrixName = NSTextField; 
                matrixNorm = NSTextField; 
                maxValueText = NSTextField; 
                minValueText = NSTextField; 
                moviePlayStop = NSButton; 
                moviePosSlider = NSSlider; 
                movieRateSlider = NSSlider; 
                movieTextSlide = NSTextField; 
                movieView = NSView; 
                newName = NSTextField; 
                newValueText = NSTextField; 
                patientView = NSView; 
                popFusion = NSPopUpButton; 
                popupRoi = NSPopUpButton; 
                previewMatrix = NSMatrix; 
                quicktimeBox = NSBox; 
                quicktimeFrom = NSSlider; 
                quicktimeFromText = NSTextField; 
                quicktimeInterval = NSSlider; 
                quicktimeIntervalText = NSTextField; 
                quicktimeMode = NSMatrix; 
                quicktimeTo = NSSlider; 
                quicktimeToText = NSTextField; 
                quicktimeWindow = NSWindow; 
                roiPropaCopy = NSMatrix; 
                roiPropaDest = NSTextField; 
                roiPropaDim = NSMatrix; 
                roiPropaMode = NSMatrix; 
                roiPropaWindow = NSWindow; 
                roiRenameMatrix = NSMatrix; 
                roiRenameName = NSTextField; 
                roiRenameWindow = NSWindow; 
                roiSetPixWindow = NSWindow; 
                sc1 = NSButton; 
                sc2 = NSButton; 
                sc3 = NSButton; 
                sc4 = NSButton; 
                sc5 = NSButton; 
                sc6 = NSButton; 
                sc7 = NSButton; 
                sc8 = NSButton; 
                sc9 = NSButton; 
                serieView = NSView; 
                setROI4DSeries = NSButton; 
                setWLWWWindow = NSWindow; 
                shutterOnOff = NSButton; 
                shutterView = NSView; 
                sizeMatrix = NSMatrix; 
                slider = NSSlider; 
                sliderFusion = NSSlider; 
                speedSlider = NSSlider; 
                speedText = NSTextField; 
                speedView = NSView; 
                splitView = NSSplitView; 
                stacksFusion = NSTextField; 
                structuringElementRadiusSlider = NSSlider; 
                structuringElementRadiusTextField = NSTextField; 
                studyView = StudyView; 
                subCtrlGamma = NSSlider; 
                subCtrlMaskText = NSTextField; 
                subCtrlOnOff = NSButton; 
                subCtrlPercent = NSSlider; 
                subCtrlSharpenButton = NSButton; 
                subCtrlView = NSView; 
                subCtrlZero = NSSlider; 
                suvConversion = NSMatrix; 
                suvForm = NSForm; 
                toolsMatrix = NSMatrix; 
                toolsView = NSView; 
                toset = NSTextField; 
                wl = NSTextField; 
                wlset = NSTextField; 
                wlwwPopup = NSPopUpButton; 
                ww = NSTextField; 
                wwset = NSTextField; 
            }; 
            SUPERCLASS = NSWindowController; 
        }
    ); 
    IBVersion = 1; 
}