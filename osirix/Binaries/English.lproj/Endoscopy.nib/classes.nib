{
    IBClasses = (
        {
            ACTIONS = {
                alwaysSyncMenu = id; 
                changeFont = id; 
                flipHorizontal = id; 
                flipVertical = id; 
                resetImagePresentationState = id; 
                resetSeriesPresentationState = id; 
                roiLoadFromXMLFiles = id; 
                sliderAction = id; 
                sliderAction2DMPR = id; 
                sliderRGBFactor = id; 
            }; 
            CLASS = DCMView; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSOpenGLView; 
        }, 
        {CLASS = EndoscopyMPRView; LANGUAGE = ObjC; SUPERCLASS = OrthogonalMPRView; }, 
        {
            ACTIONS = {applyShading = id; }; 
            CLASS = EndoscopyVRController; 
            LANGUAGE = ObjC; 
            OUTLETS = {shadingPanel = NSPanel; shadingsPresetsController = NSArrayController; }; 
            SUPERCLASS = VRController; 
        }, 
        {CLASS = EndoscopyVRView; LANGUAGE = ObjC; SUPERCLASS = VRView; }, 
        {
            ACTIONS = {
                ApplyWLWW = id; 
                change2DTool = id; 
                change3DTool = id; 
                endDCMExportSettings = id; 
                exportDICOMFile = id; 
            }; 
            CLASS = EndoscopyViewer; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                LODView = NSView; 
                WLWW2DView = NSView; 
                WLWW3DView = NSView; 
                bottomSplitView = NSSplitView; 
                clut2DPopup = NSPopUpButton; 
                engineView = NSView; 
                exportDCMSeriesName = NSTextField; 
                exportDCMViewsChoice = NSMatrix; 
                exportDCMWindow = NSWindow; 
                mprController = OrthogonalMPRController; 
                shadingView = NSView; 
                tools2DMatrix = NSMatrix; 
                tools2DView = NSView; 
                tools3DMatrix = NSMatrix; 
                tools3DView = NSView; 
                topSplitView = NSSplitView; 
                vrController = EndoscopyVRController; 
                wlww2DPopup = NSPopUpButton; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {CLASS = FirstResponder; LANGUAGE = ObjC; SUPERCLASS = NSObject; }, 
        {
            ACTIONS = {
                blendingPropagate = id; 
                blendingPropagateOriginal = id; 
                blendingPropagateX = id; 
                blendingPropagateY = id; 
                fullWindowView = id; 
                showViews = id; 
                toggleDisplayResliceAxes = id; 
            }; 
            CLASS = OrthogonalMPRController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                originalView = OrthogonalMPRView; 
                viewer = id; 
                xReslicedView = OrthogonalMPRView; 
                yReslicedView = OrthogonalMPRView; 
            }; 
            SUPERCLASS = NSObject; 
        }, 
        {CLASS = OrthogonalMPRView; LANGUAGE = ObjC; SUPERCLASS = DCMView; }, 
        {
            CLASS = ShadingArrayController; 
            LANGUAGE = ObjC; 
            SUPERCLASS = NSArrayController; 
        }, 
        {
            ACTIONS = {
                ApplyCLUT = id; 
                ApplyOpacity = id; 
                LODsliderAction = id; 
                MoviePlayStop = id; 
                blendingSlider = id; 
                clutAction = id; 
                editShadingValues = id; 
                endCLUT = id; 
                endNameWLWW = id; 
                endOpacity = id; 
                endShadingEditing = id; 
                moviePosSliderAction = id; 
                movieRateSliderAction = id; 
                resetShading = id; 
                setDefaultTool = id; 
                setEngine = id; 
                setMode = id; 
            }; 
            CLASS = VRController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                BlendingView = NSView; 
                LODSlider = NSSlider; 
                LODView = NSView; 
                OpacityName = NSTextField; 
                OpacityPopup = NSPopUpButton; 
                OpacityView = OpacityTransferView; 
                WLWWView = NSView; 
                addCLUTWindow = NSWindow; 
                addOpacityWindow = NSWindow; 
                addWLWWWindow = NSWindow; 
                blendingPercentage = NSTextField; 
                blendingSlider = NSSlider; 
                clutName = NSTextField; 
                clutPopup = NSPopUpButton; 
                clutView = ColorTransferView; 
                enginePopup = NSPopUpButton; 
                engineView = NSView; 
                modeMatrix = NSMatrix; 
                modeView = NSView; 
                moviePlayStop = NSButton; 
                moviePosSlider = NSSlider; 
                movieRateSlider = NSSlider; 
                movieTextSlide = NSTextField; 
                movieView = NSView; 
                newName = NSTextField; 
                perspectiveView = NSView; 
                scissorStateView = NSView; 
                shadingCheck = NSButton; 
                shadingEditWindow = NSWindow; 
                shadingForm = NSForm; 
                shadingValues = NSTextField; 
                shadingView = NSView; 
                toolsMatrix = NSMatrix; 
                toolsView = NSView; 
                view = VRView; 
                wl = NSTextField; 
                wlwwPopup = NSPopUpButton; 
                ww = NSTextField; 
            }; 
            SUPERCLASS = Window3DController; 
        }, 
        {
            ACTIONS = {
                IBPropagate3DPointsSettings = id; 
                IBSetSelected3DPointColor = id; 
                IBSetSelected3DPointRadius = id; 
                bestRendering = id; 
                endDCMExportSettings = id; 
                endQuicktimeSettings = id; 
                endQuicktimeVRSettings = id; 
                export2iPhoto = id; 
                exportDICOMFile = id; 
                exportJPEG = id; 
                exportQuicktime = id; 
                exportTIFF = id; 
                resetImage = id; 
                resizeWindow = id; 
                saView = id; 
                save3DPointsDefaultProperties = id; 
                scissorStateButtons = id; 
                sendMail = id; 
                setCurrentdcmExport = id; 
                setRenderMode = id; 
                switchOrientationWidget = id; 
                switchProjection = id; 
                switchShading = id; 
                switchToSeriesRadio = id; 
            }; 
            CLASS = VRView; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                VRFrames = NSMatrix; 
                VRquality = NSMatrix; 
                controller = VRController; 
                dcmBox = NSBox; 
                dcmExportMode = NSMatrix; 
                dcmSeriesName = NSTextField; 
                dcmframesSlider = NSSlider; 
                dcmorientation = NSMatrix; 
                dcmquality = NSMatrix; 
                dcmrotation = NSMatrix; 
                export3DVRWindow = NSWindow; 
                export3DWindow = NSWindow; 
                exportDCMWindow = NSWindow; 
                framesSlider = NSSlider; 
                orientation = NSMatrix; 
                point3DColorWell = NSColorWell; 
                point3DInfoPanel = NSPanel; 
                point3DPropagateToAll = NSButton; 
                point3DRadiusSlider = NSSlider; 
                point3DSetDefault = NSButton; 
                projection = NSMatrix; 
                quality = NSMatrix; 
                rotation = NSMatrix; 
                scissorStateMatrix = NSMatrix; 
            }; 
            SUPERCLASS = VTKView; 
        }, 
        {CLASS = VTKView; LANGUAGE = ObjC; SUPERCLASS = vtkCocoaGLView; }, 
        {
            ACTIONS = {SetWLWW = id; endSetWLWW = id; updateSetWLWW = id; }; 
            CLASS = Window3DController; 
            LANGUAGE = ObjC; 
            OUTLETS = {
                fromset = NSTextField; 
                setWLWWWindow = NSWindow; 
                toset = NSTextField; 
                wlset = NSTextField; 
                wwset = NSTextField; 
            }; 
            SUPERCLASS = NSWindowController; 
        }, 
        {CLASS = vtkCocoaGLView; LANGUAGE = ObjC; SUPERCLASS = NSView; }
    ); 
    IBVersion = 1; 
}