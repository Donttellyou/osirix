3.0 New Features:

- Misc GUI adjustments
- OpenJPEG option for JPEG2000
- Download DICOM Nodes list from an URL
- Brush ROI filters (Dilate/Erode/Open/Close) in 4D (if same name)
- 4D ROIs in Volume Rendering

- 64 bits (Support up to 128-TB of RAM, instead of 4-GB)
- Magnetic Windows
- DICOM Editor : edit any DICOM fields - See Meta-Data window
- 3D Settings (thumbnails, shading, CLUT, opacity, ...)
- Local database in the 'Sources' area - See Preferences Locations
- Better interpolation for zoom
- Registration (points based, rigid)
- Editable image annotations (see Preferences)
- DICOM CoverFlow, Icon Thumbnails and QuickLook plugins
- Built-in HTTP Server with XML-RPC protocol for HIS/RIS Integration - See http://www.osirix-viewer.com/XML-RPC.pdf
- Built-in Web Server: Browse the database from an iPhone and more!
- High quality tele-radiology through MacOS 10.5 iChat Theater protocol
- Layer ROIs from PNG, JPEG (The *ultimate* annotation tool)
- Faster and more robust DB sharing
- ROIs morphing: generate missing ROIs
- Growl support (http://growl.info/)
- Automatically eject CD/DVD after importing
- Better support for 4D series (Alt key + click on 2D/3D Viewer icon)
- Plugins Manager
- Windows Media Video (WMV) format for movies export if Flip4Mac is installed
- Better iPod management (available as a 'OsiriX Data' database folder in the Sources).
- NIfTI-1 Data Format support
- Possibility to tile multiple series in DICOM Export, Quicktime Export
- Possibility to copy all ROIs of a series into another series (image fusion window)
- Better 'ROI Volume' support: extract data from ROI Volume.
- Textured ROI Volume in 3D
- Possibility to restore the pixels from the "Set Pixel Values to..." window.
- ITK 3.2.0
- Possibility to add DICOM Fields in Report Templates (RTF or Pages): ÇDICOM_FIELD:ReferringPhysiciansNameÈ
- Reslice a series according to another series
- Non Linear Transfer Functions for 2D Viewers (logarithmic, ...)
- New Database format (smaller, faster)
- ROIs are now saved in the Database and completely supported in the DICOM Network/Files protocols
- ROIs are now visible on network shared Database
- Better image quality for PET-CT reading
- Faster Ortho-MPR & PET-CT Ortho MPR
- Better & Faster tiling viewing mode
- Possibility to lock a study against deletion
- Possibility to save and restore the workspace (windows position, index, ...) - see 2D Viewer menu
- Possibility to merge series or studies
- Spline for ROIs - See Preferences Viewers
- High Quality rendering for Curved-MPR

TODO:
- Preferred syntax for retrieve during Q&R : OsiriX Client (C-MOVE SCU)
- On the fly compression/decompression for Q&R : OsiriX Server (C-MOVE SCP)
- Option to sync all the preview list (thumbnails) of all opened viewers (See Viewer Preferences)
- 64-bit Space Navigator support

- Refresh Q&R
- Word 2008 bug?
- Reslice oblique : 2D MPR, Points?
- Report modality - study description
- WADO Client/Server

- Preferences for Status menu in DB
- Merge Exports to Quicktime, Files, DICOM Files, DICOM Node
- Is it possible to place keyed images into a report automatically when generating a report?
- Batch export in 2D-MPR
- New smart filter editor (10.5)
- NRRD: ITK IO
- NSOperation
- New series for keyimages
- Perfusion
- ROI enhancement
- Worklist DICOM

HUG:

- Routage colloques
- Demandes numerisees
- Rapport images -> DPI

for i in `ls -a | grep plugin`; do tempfile="`basename "$i" .plugin`.osirixplugin"; mv $i $tempfile; done;

for i in `ls *.a`; do lipo -create "$i" "$i"i386 -output "$i"final; done


VTK MODIFICATIONS : 

Done in VTKView.mm from OsiriX:
	- SetWindowName : 0L
	- Retain/Release system in VTKCocoaWindow

- TURN OFF FREETYPE CACHE SUPPORT in vtkFreeTypeUtilities.h (//# define VTK_FREETYPE_CACHING_SUPPORTED) __ppc64__
IT SEEMS TO WORK IF WE DONT CHANGE THE SIZE....
#if (__ppc64__) || (__ppc__)
//# define VTK_FREETYPE_CACHING_SUPPORTED
#else
# define VTK_FREETYPE_CACHING_SUPPORTED
#endif


- Alpha rendering for freetype text : see below

Index: Rendering/vtkFreeTypeUtilities.cxx
===================================================================
RCS file: /cvsroot/VTK/VTK/Rendering/vtkFreeTypeUtilities.cxx,v
retrieving revision 1.29
diff -r1.29 vtkFreeTypeUtilities.cxx
160c160
<   this->ImageCache   = NULL;
---
>   this->ImageCache   = NULL;cccc
1250c1250
< 
---
> 	  
1258c1258,1259
<           t_alpha = tprop_opacity * (*glyph_ptr / 255.0); 
---
>           t_alpha = tprop_opacity * (*glyph_ptr / 255.0);	// 
> 		  
1260c1261,1263
<           data_alpha = (data_ptr[3] - data_min) / data_range;
---
>           
> 		  data_alpha = (data_ptr[3] - data_min) / data_range;
> 		  
1262c1265,1266
<             data_min + data_range * tprop_r);
---
>             data_min + data_range * tprop_r*t_alpha + 
>                 (*data_ptr * data_alpha) * t_1_m_alpha);
1263a1268
> 		  
1265c1270,1271
<             data_min + data_range * tprop_g);
---
>             data_min + data_range * tprop_g*t_alpha + 
>                 (*data_ptr * data_alpha) * t_1_m_alpha);
1266a1273
> 		  
1268c1275,1276
<             data_min + data_range * tprop_b);
---
>             data_min + data_range * tprop_b*t_alpha + 
>                 (*data_ptr * data_alpha) * t_1_m_alpha);
1269a1278
> 		  
1271a1281
> 			
Index: Rendering/vtkFreeTypeUtilities.h
===================================================================
RCS file: /cvsroot/VTK/VTK/Rendering/vtkFreeTypeUtilities.h,v
retrieving revision 1.11
diff -r1.11 vtkFreeTypeUtilities.h
42c42
< # define VTK_FREETYPE_CACHING_SUPPORTED
---
> //# define VTK_FREETYPE_CACHING_SUPPORTED
Index: Rendering/vtkOpenGLFreeTypeTextMapper.cxx
===================================================================
RCS file: /cvsroot/VTK/VTK/Rendering/vtkOpenGLFreeTypeTextMapper.cxx,v
retrieving revision 1.47
diff -r1.47 vtkOpenGLFreeTypeTextMapper.cxx
208a209,210
> 	return;
> 
