- 3D Curved MPR viewer
- JPEG2000 supported in DCMTK
- New Web Server engine: faster, more robust, and cleaner
- Kakadu SDK for JPEG2000 : Up to 6 times faster than OpenJPEG
- Many multi-threading optimizations, for better GUI interactions
- OpenJPEG library updated to 1.4
- Flash support, instead of Quicktime, for the built-in Web Server
- Web Server: Administer Users from the Web
- Track Pad support : magnification, rotation, swipe
- DCMTK SDK support for anonymization (better quality compared to DCM Framework)
- DCMTK SDK support for DICOM export (better quality compared to DCM Framework, all fields are copied)
- Anonymization: existing fields of the file(s) displayed
- Scout series: customize the Series Description string for Localizers parsing
- Rotation / Scaling of ROI (Line, Ellipse) in 3D MPR view
- Export 'all views' in 3D-MPR and 2D Ortho-MPR (including PET-CT)
- QR : search by Institution Name
- Display images in real 'actual size', according to monitor resolution and size (2D Viewer contextual menu)
- Zoom centered around mouse position (2D Viewer Preferences)
- WADO Retrieve: OsiriX will only download the UID that are not available locally (faster, and spare bandwidth)

- Abort Bonjour DB loading bug
- QR : birthday
- DICOM Listener TLS?

- Web Server: A list of JPEG, instead of a quicktime movie, if number of images < 20
- Web Server: A link for keyimages: jpeg or movie, depending on number of images < 20
- Web Server: Include previous study for specific patients
- Web Server: Burn option if the CD/DVD is installed

- Two Steps DICOM Editing
- Dont rotate tText
- Tool to create a new series from key images of a study
- Tomographie rotational angio
- Echo/US : map zone
- DICOM Listener: preferences to force re-index
- CoreData read/read multithreaded? read/write multithreaded?
- QR : Local Comments, Local Status versus Distant Comments, Distant Status
- 'Archived' field (comments?)
- Custom DB time interval: floating panel
- 3D ROI -> 2D Viewer
- ROI Polygon: add a point
- Front/Back button: SR
- CD partial import
- crash PowerCrush
- Save default order for albums
- VTK 5.6 GPUVolumeRendering
- dcmtk 3.5.5 -> JPLS
- Print images, containing ROIs
- Option to include 3D viewers in Tile Window
- ROI Manager (series level)
- Hanging Protocols
- Display current image in 3D plane
- Registration see Volview - Plugin
- Sync Ortho-MPR
- Propagate sub-settings
- Phase Cardiac
- Printing Layout
- Growing region: set to new val
- DICOM Printing 1/1 size, fit to size
- Add DB toolbar to QR window
- Key Series
- For the existing `find next key image' and `find previous key image' function, the function is limited to a particular series and the search will stop at the first/last key image within a series. I would like to suggest the find option can proceed to the first key image of next series or the last key image of previous series towards the first and last key image of a particular series, probably within the same study but may also extend to different studies of the same patient. 

QA
- BugZilla (sourceforge?)
- EggPlant
- Sikuli (http://sikuli.org/)
- UnitTesting (assert functions) (http://developer.apple.com/tools/unittest.html - SenTestingKit.framework, OCMock.framework)
- Regression tests
- ILCrashReporter
- Doxygen
- SVN - Version

Cours
- Basics:
- dmg, export dicom cd, html export
- web server

- Report modality - study description
- WADO Client/Server
- Hanging Protocol

- Password DB in keychain
- Preferences for Status menu in DB
- Merge Exports to Quicktime, Files, DICOM Files, DICOM Node
- Is it possible to place keyed images into a report automatically when generating a report?
- Worklist DICOM

for i in `ls -a | grep plugin`; do tempfile="`basename "$i" .plugin`.osirixplugin"; mv $i $tempfile; done;

for i in `ls *.*`; do mv "$i" "$i"ppc; done

for i in `ls *.a`; do lipo -create "$i" "$i"ppc -output "$i"final; done

VTK MODIFICATIONS : 

Optimizations:

-march=nocona -ffast-math -funroll-loops -ftree-vectorize -fomit-frame-pointer

-mtune=nocona -mmmx -msse -msse2 -msse3 -mfpmath=sse

ITK: remove Wmo long double in CMakeLists.txt, after generating
__isnand dans vnl_math.cxx, remplacer avec __inline_isnand (voir math.h)

Done in VTKView.mm from OsiriX:
	- SetWindowName : 0L
	- Retain/Release system in VTKCocoaWindow

- TURN OFF FREETYPE CACHE SUPPORT in vtkFreeTypeUtilities.h (//# define VTK_FREETYPE_CACHING_SUPPORTED) __ppc64__
IT SEEMS TO WORK IF WE DONT CHANGE THE SIZE....
#if (__ppc64__) || (__ppc__)
//# define VTK_FREETYPE_CACHING_SUPPORTED
#else
# define VTK_FREETYPE_CACHING_SUPPORTED
#endif

for i in `ls *.dylib`; do install_name_tool -id @executable_path/../Frameworks/"$i" "$i"; done

- WARNING MEMORY LEAK IN SetCocoaManager (vtkCocoaRenderWindowInteractor and vtkCocoaRenderWindow) :

if (manager == NULL)
    {
    NSMutableDictionary* cocoaManager = 
      reinterpret_cast<NSMutableDictionary *>(this->CocoaManager);
    #ifdef __OBJC_GC__
      [[NSGarbageCollector defaultCollector]
        enableCollectorForPointer:cocoaManager];
    #else
      [cocoaManager release];
    #endif
    }

- Alpha rendering for freetype text : see below

- Switch default gcc compiler

cd /usr/bin
sudo rm gcc
sudo ln -s gcc-4.2 gcc
sudo rm c++
sudo ln -s c++-4.2 c++

Index: Rendering/vtkFreeTypeUtilities.cxx
===================================================================
RCS file: /cvsroot/VTK/VTK/Rendering/vtkFreeTypeUtilities.cxx,v
retrieving revision 1.29
diff -r1.29 vtkFreeTypeUtilities.cxx
160c160
<   this->ImageCache   = NULL;
---
>   this->ImageCache   = NULL;cccc
1250c1250
< 
---
> 	  
1258c1258,1259
<           t_alpha = tprop_opacity * (*glyph_ptr / 255.0); 
---
>           t_alpha = tprop_opacity * (*glyph_ptr / 255.0);	// 
> 		  
1260c1261,1263
<           data_alpha = (data_ptr[3] - data_min) / data_range;
---
>           
> 		  data_alpha = (data_ptr[3] - data_min) / data_range;
> 		  
1262c1265,1266
<             data_min + data_range * tprop_r);
---
>             data_min + data_range * tprop_r*t_alpha + 
>                 (*data_ptr * data_alpha) * t_1_m_alpha);
1263a1268
> 		  
1265c1270,1271
<             data_min + data_range * tprop_g);
---
>             data_min + data_range * tprop_g*t_alpha + 
>                 (*data_ptr * data_alpha) * t_1_m_alpha);
1266a1273
> 		  
1268c1275,1276
<             data_min + data_range * tprop_b);
---
>             data_min + data_range * tprop_b*t_alpha + 
>                 (*data_ptr * data_alpha) * t_1_m_alpha);
1269a1278
> 		  
1271a1281
> 			
Index: Rendering/vtkFreeTypeUtilities.h
===================================================================
RCS file: /cvsroot/VTK/VTK/Rendering/vtkFreeTypeUtilities.h,v
retrieving revision 1.11
diff -r1.11 vtkFreeTypeUtilities.h
42c42
< # define VTK_FREETYPE_CACHING_SUPPORTED
---
> //# define VTK_FREETYPE_CACHING_SUPPORTED
Index: Rendering/vtkOpenGLFreeTypeTextMapper.cxx
===================================================================
RCS file: /cvsroot/VTK/VTK/Rendering/vtkOpenGLFreeTypeTextMapper.cxx,v
retrieving revision 1.47
diff -r1.47 vtkOpenGLFreeTypeTextMapper.cxx
208a209,210
> 	return;
> 

//make CFLAGS="-isysroot /Developer/SDKs/MacOSX10.5.sdk -arch ppc -arch i386 -arch x86_64" LDFLAGS="-syslibroot /Developer/SDKs/MacOSX10.5.sdk -arch ppc -arch i386 -arch x86_64"

make CFLAGS="-isysroot /Developer/SDKs/MacOSX10.5.sdk -arch ppc64" LDFLAGS="-syslibroot /Developer/SDKs/MacOSX10.5.sdk -arch ppc64"

// Not true anymore?
-- OpenJPEG 64bit support:
-- m = (int*)opj_malloc(sizeof(int) * (dwt_decode_max_resolution(tr, i)+5));
-- h.mem = v.mem = (int*)( (unsigned long)m + 16 - ( (unsigned long)m % 16 ) ) ;

OpenJPEG optimization:
make CFLAGS="-isysroot /Developer/SDKs/MacOSX10.5.sdk -arch ppc -arch i386 -arch x86_64 -O3 -fPIC -msse -msse2 -msse3 -ffast-math -funroll-loops -ftree-vectorize -fomit-frame-pointer" LDFLAGS="-syslibroot /Developer/SDKs/MacOSX10.5.sdk -arch ppc -arch i386 -arch x86_64" osx



- Un meilleur support des normes DICOM network: C-FIND, C-MOVE, C-GET, C-STORE. Actuellement le C-FIND est particulièrement lent: plusieurs secondes. Et plus grave, il réponds partiellement à la requête: par exemple, un C-FIND en fin de journée sur les CT du jour ne donnera pas toute la liste, mais se limitera aux 20 premiers. Il semble qu'il y ait un timeout? Ce mauvais support de la norme DICOM limite énormément l'intégration du PACS avec d'autres systèmes (3D workstations, téléradiologie, etc.)


- Performances de transfert en C-MOVE, C-STORE. Pourquoi la vitesse de transfert est-elle si lente? Environ 2-3 MB/s? (Le reseau de LaTour est maintenant en ethernet 1 Gb) On pourrait espérer au minimum un débit de 10 MB/s depuis le serveur.


- Le support d'une syntaxe de compression. Le PACS supporte-t-il la compression JPEG2000 lossless? ou un autre à la norme DICOM?


- Support du WADO: dans l'idée de créer dans un avenir proche un 'portal web' pour les cliniciens externes, le serveur PACS devrait être facilement interfacable à un serveur web. Le support de la norme WADO permettrait une intégration facile.
ftp://medical.nema.org/medical/dicom/2008/08_18pu.pdf


- L'indexation des fichiers DICOM par une base de données indépendante: toujours dans l'optique d'un portal web, cela permettrait de coupler le PACS au logiciel dcm4chee, qui offre la norme WADO et un viewer web: oviyam (http://oviyam.raster.in/), par exemple. Est-ce qu'une indexation des fichiers par un autre logiciel est-elle 'officiellement' supportée?


- Concernant le viewer, y a-t-il un support de la fusion d'image? Avec l'installation prochaine du SPECT-CT, la fusion d'image sera nécessaire pour l'interprétation des images. Sinon, ces examens devront être lus et interprétés uniquement sur la station Philips livrée avec le SPECT-CT. La même question se reposera si on installe un PET-CT dans l'avenir.

// Release
- Bundle Version
- Localizations strings : genstrings *.m *.mm *.h cocoahttpserver/*.m cocoahttpserver/*.h AYDicomPrint/*.m AYDicomPrint/*.mm nitrogen/*.m nitrogen/*.mm nitrogen/*.h -macRoman
- Localizations strings Preferences
- Check if OsiriX Lite works...
- OsiriX Lite Upload
- QuickLook
- Update plugins
- For international version, manually resign
- codesign -vvv /Applications/OsiriX.app
- 64bitExtension : upload osirix-viewer.com
- 64bitExtension : Kagi Blurb AND in products list for CD/DVD backup AND in pixmeo MySQL DB web site
- Update Downloads.html
- Update versionLeopard.html xml
- wwww.apple.com/download

MacAppStore:
- dSYM files (directly edit proj file)
- 